%hListTargetPDSCHs Target PDSCH configurations generation for EVM measurement
%   [PDSCHARRAY,TARGETRNTIS,CARRIER] = hListTargetPDSCHs(WAVECFG,RESOURCESINFO,RNTISET)
%   generates list of target PDSCH configurations, PDSCHARRAY, to measure
%   EVM in shared channels given the parameters in WAVECFG and
%   RESOURCESINFO. WAVECFG contains carrier and cell related parameters
%   RESOURCESINFO is a structure array of slot-wise PDSCH resources. The
%   list of considered RNTIs is returned in output argument TARGETRNTIS.
%   CARRIER is a carrier specific configuration object, as described in <a
%   href="matlab:help('nrCarrierConfig')">nrCarrierConfig</a> Optional
%   input, RNTISET, is the list of target RNTIs to decode. If not
%   specified, the list is autogenerated, based on TS 38.141-1 and TS
%   38.141-2.

%   Copyright 2019-2020 The MathWorks, Inc.

function [pdschArray,targetRNTIs,carrier] = hListTargetPDSCHs(waveCfg,resourcesInfo,RNTISet)

    if nargin <= 2 || isempty(RNTISet) % No optional inputs
        % Locate a waveform name label describing the waveform
        name = "No name label found";
        if isfield(waveCfg,'Label')
            name = waveCfg.Label;
        elseif isfield(waveCfg,'Name')
            name = waveCfg.Name;
        elseif isfield(resourcesInfo,'Label')
            name = resourcesInfo.Label;
        end
        switch name
            case {"NR-FR1-TM3.1" "NR-FR1-TM3.1a" "NR-FR2-TM3.1"}
                targetRNTIs = [0 2];
            case {"NR-FR1-TM3.2" "NR-FR1-TM3.3"}
                targetRNTIs = 1;
            case {"NR-FR1-TM1.2" "NR-FR1-TM2" "NR-FR1-TM2a" "NR-FR2-TM2"}
                targetRNTIs = 2;
            case {"NR-FR1-TM1.1" "NR-FR2-TM1.1",...                            % TM1.1 (FR1, FR2)
                  "DL-FRC-FR1-QPSK" "DL-FRC-FR1-64QAM" "DL-FRC-FR1-256QAM",... % FRC - FR1
                  "DL-FRC-FR2-QPSK" "DL-FRC-FR2-16QAM" "DL-FRC-FR2-64QAM"}     % FRC - FR2
                targetRNTIs = 0;
            otherwise
                error("The specified waveform name (" + name +...
                    ") is not recognized. It should be in the set: " +...
                    "NR-FR1-TM1.1, NR-FR1-TM1.2, NR-FR1-TM2, NR-FR1-TM2a, " + ...
                    "NR-FR1-TM3.1, NR-FR1-TM3.1a, NR-FR1-TM3.2, NR-FR1-TM3.3, " +...
                    "NR-FR2-TM1.1, NR-FR2-TM2, NR-FR2-TM3.1, " + ...
                    "DL-FRC-FR1-QPSK, DL-FRC-FR1-64QAM, DL-FRC-FR1-256QAM " + ...
                    "DL-FRC-FR2-QPSK DL-FRC-FR2-16QAM DL-FRC-FR2-64QAM")
        end
    else
        targetRNTIs = RNTISet;
    end

    % Identify the measurement target PDSCH using the RNTI
    pdschArray = []; % Contains the PDSCH structures for the considered shared channels

    % Copy the input parameters into an array
    if iscell(waveCfg.PDSCH)
        pdschDefs = [waveCfg.PDSCH{:}];
    else
        pdschDefs = waveCfg.PDSCH;
    end

    for n = 1:length(pdschDefs)
        if any(pdschDefs(n).RNTI == targetRNTIs(:)) % Present RNTI not included in target list
            ri = resourcesInfo.PDSCH(n);
            ri.PDSCH = pdschDefs(n);
            pdschArray = [pdschArray ri]; %#ok<AGROW>
        end
    end
    if isempty(pdschArray)
        warning('Given list of RNTIs are not present in PDSCH config, using RNTI from first config.');
        ri = resourcesInfo.PDSCH(1);
        ri.PDSCH = pdschDefs(1);
        pdschArray = [pdschArray ri];
    end

    % Identify the SCS carrier in use
    if isstruct(waveCfg)
        gridsize = waveCfg.Carriers.NRB;
        gridstart = waveCfg.Carriers.RBStart;
        cp = waveCfg.BWP.CyclicPrefix;
        scs = waveCfg.Carriers.SubcarrierSpacing;
    else
        gridsize = waveCfg.SCSCarriers{1}.NSizeGrid;
        gridstart = waveCfg.SCSCarriers{1}.NStartGrid;
        cp = waveCfg.BandwidthParts{1}.CyclicPrefix;
        scs = waveCfg.SCSCarriers{1}.SubcarrierSpacing;
    end

    % Create carrier resource grid configuration for synchronization and OFDM demodulation
    carrier = nrCarrierConfig;
    carrier.NCellID = waveCfg.NCellID;
    carrier.NSizeGrid = gridsize;
    carrier.NStartGrid = gridstart;
    carrier.SubcarrierSpacing = scs;
    carrier.CyclicPrefix = cp;
end